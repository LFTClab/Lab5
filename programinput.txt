program mainfunction content declarations listvar type listofstmt stmt assignstmt expr operator inputstmt outputstmt condstmt loopstmt IDENTIFIER CONSTANT
PUBLIC CLASS STATIC VOID MAIN STRING ARGS INT BOOLEAN DOUBLE READ PRINT IF ELSE WHILE { } ( ) [ ] ; , = + - * / > < NE EQ LE GE a 2
program->PUBLIC CLASS IDENTIFIER { mainfunction } ;
mainfunction->PUBLIC STATIC VOID MAIN ( STRING [ ] ARGS ) { content } ;
content->declarations listofstmt ;
declarations->type listvar ;
declarations->type listvar ; declarations ;
listvar->IDENTIFIER
listvar->IDENTIFIER , listvar ;
type->INT
type->BOOLEAN
type->DOUBLE
listofstmt->stmt
listofstmt->stmt listofstmt ;
stmt->assignstmt ;
stmt->inputstmt ;
stmt->outputstmt ;
stmt->condstmt
stmt->loopstmt
assignstmt->IDENTIFIER = expr
assignstmt->IDENTIFIER = expr operator expr
expr->IDENTIFIER
expr->CONSTANT
operator->+
operator->-
operator->*
operator->/
operator->>
operator-><
operator->NE
operator->EQ
operator->LE
operator->GE
inputstmt->IDENTIFIER = READ ( )
outputstmt->PRINT ( IDENTIFIER )
condstmt->IF ( expr operator expr ) { listofstmt }
condstmt->IF ( expr operator expr ) { listofstmt } ELSE { listofstmt }
loopstmt->WHILE ( expr operator expr ) { listofstmt }
IDENTIFIER->a
CONSTANT->2